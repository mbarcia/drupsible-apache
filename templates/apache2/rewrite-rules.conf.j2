      # If your site can be accessed both with and without the '{{ webhost }}.' prefix, you
      # can use one of the following settings to redirect users to your preferred
      # URL, either WITH or WITHOUT the '{{ webhost }}.' prefix. Choose ONLY one option:
      #
      # To redirect all users to access the site WITH the '{{ webhost }}.' prefix,
      # (http://example.com/... will be redirected to http://{{ webhost }}.example.com/...)
      # uncomment the following:
      RewriteCond %{HTTP_HOST} .
      RewriteCond %{HTTP_HOST} !^{{ webhost }}\. [NC]
      RewriteRule ^ http%{ENV:protossl}://{{ webhost }}.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
      #
      # To redirect all users to access the site WITHOUT the 'www.' prefix,
      # (http://{{ webhost }}.example.com/... will be redirected to http://example.com/...)
      # uncomment the following:
      # RewriteCond %{HTTP_HOST} ^{{ webhost }}\.(.+)$ [NC]
      # RewriteRule ^ http%{ENV:protossl}://%1%{REQUEST_URI} [L,R=301]
    
      # Modify the RewriteBase if you are using Drupal in a subdirectory or in a
      # VirtualDocumentRoot and the rewrite rules are not working properly.
      # For example if your site is at http://example.com/drupal uncomment and
      # modify the following line:
      # RewriteBase /drupal
      #
      # If your site is running in a VirtualDocumentRoot at http://example.com/,
      # uncomment the following line:
      # RewriteBase /
    
{% if app_i18n and app_languages is defined %}
  {% for language in app_languages %}
      ## On frontpage redirect to /{{ language }} if the browser language starts with {{ language }}
      RewriteCond %{HTTP:Accept-Language} ^{{ language }}.*$ [NC]
      RewriteCond %{REQUEST_URI} ^/$ [NC]
      RewriteCond %{QUERY_STRING} !(^q\=) [NC]
      RewriteRule ^(.*)$ /{{ language }} [L,R=302]
  {% endfor %}
{% endif %}
