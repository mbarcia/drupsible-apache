---
- name: Check MPM flavor
  fail:
    msg: "Please specify apache2_mpm as prefork, worker, or event."
  when: apache2_mpm != "prefork" and apache2_mpm != "worker" and apache2_mpm != "event"

- name: Install Apache2
  package:
    name: "{{ item }}"
    state: present
    use: apt
  with_items: "{{ apache2_packages }}"
  notify: "Restart apache"
  tags: [ provision ]

- name: Install Apache2 additional pkgs
  package:
    name: "{{ item }}"
    state: present
    use: apt
  when: item != ''
  with_items: "{{ apache2_packages_ontop|default([]) }}"
  notify: "Restart apache"
  tags: [ provision ]

- name: Register Apache version
  shell: apache2 -v | grep version | sed -e 's|^.*Apache/\([0-9\.]*\).*$|\1|g'
  register: apache2_version
  changed_when: False
  tags: [ always ]

- name: Initialize Unix Domain Sockets availability
  set_fact:
    apache2_uds_available: no
  tags: [ always ]

- name: Apache implements Unix Domain Sockets (UDS) since 2.4.10+ (task allowed to fail)
  when: apache2_version is defined and apache2_version.stdout|version_compare('2.4.10', '>=')
  set_fact:
    apache2_uds_available: yes
  ignore_errors: yes
  tags: [ always ]

- name: Make sure that Ansible local facts directory is present
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save apache2 local facts
  template:
    src: 'etc/ansible/facts.d/apache2.fact.j2'
    dest: '/etc/ansible/facts.d/apache2.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: apache2_register_local_facts

- name: Gather facts if they were modified
  action: setup
  when: apache2_register_local_facts.changed

- name: Disable Apache2 MPM worker and event, if prefork is requested
  apache2_module:
    name: "{{ item }}"
    state: absent
  with_items:
  - mpm_worker
  - mpm_event
  when: apache2_mpm == "prefork"
  ignore_errors: true
  notify: "Restart apache"

- name: Configure Apache prefork MPM
  template:
    src: apache2/mods/mpm_prefork.conf.j2
    dest: /etc/apache2/mods-available/mpm_prefork.conf
  when: apache2_mpm == "prefork"
  notify: "Restart apache"

- name: Create self signed SSL certificates
  command: "openssl req -x509 -nodes -sha256 -days 99999 -newkey rsa:2048 -keyout {{ apache2_pki_key }} -out {{ apache2_pki_cert }} -subj '/C=US/ST=NC/L=London/O={{ apache2_site_name }}/CN={{ apache2_webdomain }}'"
  args:
    creates: "{{ apache2_pki_cert }}"
  when: apache2_https_enabled|default(False)|bool
  notify: "Restart apache"

- name: Configure file permissions on certificate file
  file:
    path: "{{ apache2_pki_cert }}"
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
    mode: 0600
  when: apache2_https_enabled|default(False)|bool
  notify: "Restart apache"
    
- name: Enable SSL
  apache2_module:
    name: ssl
    state: present
  when: apache2_https_enabled|default(False)|bool
  notify: "Restart apache"

- name: Enable Apache2 additional modules
  apache2_module:
    name: "{{ item }}"
    state: present
  with_items: "{{ apache2_modules }}"
  notify: "Restart apache"

- name: Disable default apache site
  file:
    path: "/etc/apache2/sites-enabled/000-default"
    state: absent
  notify: "Restart apache"

- name: Disable default-ssl apache site
  file:
    path: "/etc/apache2/sites-enabled/000-default-ssl"
    state: absent
  notify: "Restart apache"

- name: Configure Apache ports
  template:
    src: apache2/ports.conf.j2
    dest: /etc/apache2/ports.conf
  notify: "Restart apache"

- name: Tighten Apache security
  copy:
    src: apache2/security.conf
    dest: /etc/apache2/conf-available/security.conf
  notify: "Restart apache"

- name: Create shared srv folder
  file:
    path: "{{ apache2_vhost_base_path }}/shared"
    state: directory

- name: Create blocking robots.txt
  copy:
    src: robots.txt
    dest: "{{ apache2_vhost_base_path }}/shared/robots.txt"
